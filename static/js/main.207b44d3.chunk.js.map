{"version":3,"sources":["InputPageModal.js","MainPage.js","SettlementPage.js","App.js","reportWebVitals.js","index.js"],"names":["Option","Select","InputPageModal","_ref","addExpense","participantsList","form","Form","useForm","React","createElement","layout","onFinish","values","payer","amount","item","participants","resetFields","Item","name","label","rules","required","message","placeholder","map","participant","key","value","InputNumber","min","style","width","Input","Checkbox","Group","options","Button","type","htmlType","Header","Content","Footer","Layout","Title","Typography","formatNumber","number","Intl","NumberFormat","maximumFractionDigits","format","MainPage","expenses","modalOpen","setModalOpen","useState","totalAmount","useMemo","reduce","acc","expense","parseFloat","columns","title","dataIndex","render","join","navigate","useNavigate","minHeight","className","Row","align","Col","gutter","src","process","alt","height","level","color","margin","fontSize","paddingLeft","paddingTop","padding","Avatar","size","backgroundColor","justify","icon","PlusCircleOutlined","onClick","Table","dataSource","index","length","textAlign","EditOutlined","handleSettlement","console","log","Modal","open","footer","onCancel","SettlementPage_Header","SettlementPage_Content","SettlementPage_Title","SettlementPage","settlementData","data","member","sharedAmount","paidAmount","balanceAmount","forEach","findIndex","payerIndex","Math","round","paddingRight","rowKey","pagination","LeftCircleOutlined","marginTop","App","setExpenses","useEffect","storedExpenses","JSON","parse","localStorage","getItem","setItem","stringify","Router","basename","Routes","Route","path","element","prevExpenses","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","StrictMode"],"mappings":"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","file":"static/js/main.207b44d3.chunk.js","sourcesContent":["// src/InputPageModal.js\nimport React from 'react';\nimport { Form, Input, InputNumber, Button, Checkbox, Select } from 'antd';\nconst { Option } = Select;\n\nconst InputPageModal = ({ addExpense, participantsList }) => {\n  const [form] = Form.useForm();\n\n  const onFinish = (values) => {\n    const { payer, amount, item, participants } = values;\n    addExpense({ payer, amount, item, participants });\n    form.resetFields();\n  };\n\n  return (\n    <Form form={form} layout=\"vertical\" onFinish={onFinish}>\n      <Form.Item name=\"payer\" label=\"付款人\" rules={[{ required: true, message: '請選擇付款人' }]}>\n        <Select placeholder=\"請選擇付款人\">\n            {participantsList.map(participant => (\n                <Option key={participant} value={participant}>{participant}</Option>\n            ))}\n        </Select>\n      </Form.Item>\n      <Form.Item name=\"amount\" label=\"金額\" rules={[{ required: true, message: '請輸入金額' }]}>\n        <InputNumber min={0} style={{ width: '100%' }} />\n      </Form.Item>\n      <Form.Item name=\"item\" label=\"項目\" rules={[{ required: true, message: '請輸入項目' }]}>\n        <Input />\n      </Form.Item>\n      <Form.Item name=\"participants\" label=\"分攤人\" rules={[{ required: true, message: '請選擇分攤人' }]}>\n        <Checkbox.Group options={participantsList} />\n      </Form.Item>\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">儲存</Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default InputPageModal;\n","import React, { useState, useMemo } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Layout, Modal, Button, Table, Avatar, Row, Col, Typography } from 'antd';\nimport { EditOutlined, PlusCircleOutlined } from '@ant-design/icons';\nimport InputPageModal from './InputPageModal';\n\nconst { Header, Content, Footer } = Layout;\nconst { Title } = Typography;\n\nconst formatNumber = (number) => {\n    return new Intl.NumberFormat('zh-TW', { \n        style: 'decimal',\n        maximumFractionDigits: 0\n    }).format(number);\n};\n\nconst MainPage = ({ expenses, addExpense, participantsList }) => {\n    const [modalOpen, setModalOpen] = useState(false);\n\n    const handleAddExpense = (expense) => {\n        addExpense(expense);\n        setModalOpen(false);\n    };\n\n    const totalAmount = useMemo(() => expenses.reduce((acc, expense) => acc + parseFloat(expense.amount), 0), [expenses]);\n\n    const columns = [\n        {\n            title: '付款人',\n            dataIndex: 'payer',\n            key: 'payer',\n        },\n        {\n            title: '金額',\n            dataIndex: 'amount',\n            key: 'amount',\n            render: (value) => formatNumber(value),\n        },\n        {\n            title: '項目',\n            dataIndex: 'item',\n            key: 'item',\n        },\n        {\n            title: '分攤人',\n            dataIndex: 'participants',\n            key: 'participants',\n            render: participants => participants.join(', '),\n        },\n    ];\n\n    const navigate = useNavigate();\n    const handleSettlement = () => {\n        console.log(\"進行結算\");\n        navigate('/settlement');\n    };\n\n    return (\n        <Layout style={{ minHeight: '100vh' }}>\n            <Header className=\"header\" >\n            <Row align=\"middle\">\n                <Col>\n                    <Row gutter={[8, 0]} align=\"middle\">\n                        <Col>\n                            <img src={process.env.PUBLIC_URL + '/header-logo.png'} alt=\"Logo\" style={{ height: '24px' }} />\n                        </Col>\n                        <Col>\n                            <Title level={4} style={{ color: 'white', margin: 0 }}>\n                                分帳小幫手\n                            </Title>\n                        </Col>\n                    </Row>\n                </Col>\n                <Col>\n                    <p style={{ color: 'rgb(153 153 153)', fontSize: '12px', margin: 0, paddingLeft: '8px', paddingTop: '8px' }}>\n                        Made with React\n                    </p>\n                </Col>\n            </Row>\n            </Header>\n            <Layout style={{ padding: '0 24px 24px' }}>\n                <Content\n                    className=\"site-layout-background\"\n                    style={{\n                        padding: 24,\n                        margin: 0,\n                        minHeight: 280,\n                    }}\n                >\n                    <h2>團員列表</h2>\n                    <Avatar.Group size=\"large\">\n                        {participantsList.map(participant => (\n                            <Avatar key={participant} style={{ backgroundColor: '#f56a00' }}>{participant}</Avatar>\n                        ))}\n                    </Avatar.Group>\n                    <h2 style={{ margin: '40px 0px 15px' }}>記帳統計</h2>\n                    <Row justify=\"space-between\" align=\"middle\" style={{ margin: '10px 0px' }}>\n                        <Col>\n                            <p>總計: ${formatNumber(totalAmount)}</p>\n                        </Col>\n                        <Col>\n                            <Button \n                                type=\"primary\" \n                                icon={<PlusCircleOutlined />} \n                                // iconPosition={\"end\"}\n                                onClick={() => setModalOpen(true)}\n                            >\n                                新增記帳\n                            </Button>\n                        </Col>\n                    </Row>\n                    <Table columns={columns} dataSource={expenses.map((expense, index) => ({ ...expense, key: index }))} />\n                </Content>\n                {expenses.length > 0 && (\n                    <Footer style={{ textAlign: 'center' }}>\n                        <Button type=\"primary\" \n                            icon={<EditOutlined />} \n                            // iconPosition={\"end\"}\n                            onClick={handleSettlement}\n                        >\n                            結算\n                        </Button>\n                    </Footer>\n                )}\n            </Layout>\n\n            {/* Modal for InputPage */}\n            <Modal\n                title=\"記帳輸入\"\n                open={modalOpen}\n                footer={null}\n                onCancel={() => setModalOpen(false)}\n            >\n                <InputPageModal \n                    addExpense={handleAddExpense} \n                    participantsList={participantsList} \n                />\n            </Modal>\n        </Layout>\n    );\n};\n\nexport default MainPage;","// src/SettlementPage.js\nimport React, { useMemo } from 'react';\nimport { Layout, Table, Button, Row, Col, Typography } from 'antd';\nimport { useNavigate } from 'react-router-dom';\nimport { LeftCircleOutlined } from '@ant-design/icons';\n\nconst { Header, Content } = Layout;\nconst { Title } = Typography;\n\nconst formatNumber = (number) => {\n    return new Intl.NumberFormat('zh-TW', { \n        style: 'decimal',\n        maximumFractionDigits: 0\n    }).format(number);\n};\n\nconst SettlementPage = ({ expenses, participants }) => {\n    const navigate = useNavigate();\n\n    const settlementData = useMemo(() => {\n        const data = participants.map(participant => ({\n            member: participant,\n            sharedAmount: 0,\n            paidAmount: 0,\n            balanceAmount: 0,\n        }));\n\n        expenses.forEach(expense => {\n            const payer = expense.payer;\n            const amount = parseFloat(expense.amount);\n            const sharedParticipants = expense.participants.length;\n            const sharedAmount = amount / sharedParticipants;\n\n            expense.participants.forEach(participant => {\n                const index = data.findIndex(item => item.member === participant);\n                if (index !== -1) {\n                    data[index].sharedAmount += sharedAmount;\n                }\n            });\n\n            const payerIndex = data.findIndex(item => item.member === payer);\n            if (payerIndex !== -1) {\n                data[payerIndex].paidAmount += amount;\n            }\n        });\n\n        return data.map(item => ({\n            ...item,\n            sharedAmount: Math.round(item.sharedAmount),\n            paidAmount: Math.round(item.paidAmount),\n            balanceAmount: Math.round(item.sharedAmount - item.paidAmount)\n        }));\n    }, [expenses, participants]);\n\n    const columns = [\n        {\n            title: '成員',\n            dataIndex: 'member',\n            key: 'member',\n        },\n        {\n            title: '分攤金額',\n            dataIndex: 'sharedAmount',\n            key: 'sharedAmount',\n            render: (value) => <div style={{ textAlign:'right', paddingRight: '10px' }}>{formatNumber(value)}</div>\n        },\n        {\n            title: '代付金額',\n            dataIndex: 'paidAmount',\n            key: 'paidAmount',\n            render: (value) => <div style={{ textAlign:'right', paddingRight: '10px' }}>{formatNumber(value)}</div>\n        },\n        {\n            title: '應付金額',\n            dataIndex: 'balanceAmount',\n            key: 'balanceAmount',\n            render: (value) => <div style={{ color: value <= 0 ? 'green' : 'red', textAlign:'right', paddingRight: '10px' }}>{formatNumber(value)}</div>\n        },\n    ];\n\n    return (\n        <Layout style={{ minHeight: '100vh' }}>\n            <Header className=\"header\">\n                <Row align=\"middle\">\n                    <Col>\n                        <img src={process.env.PUBLIC_URL + '/header-logo.png'} alt=\"Logo\" style={{ height: '24px' }} />\n                    </Col>\n                    <Col>\n                        <Title level={4} style={{ color: 'white', padding: '4px', margin: 0}}>\n                        分帳小幫手\n                        </Title>\n                    </Col>\n                </Row>\n            </Header>\n            <Layout style={{ padding: '0 24px 24px' }}>\n                <Content\n                    className=\"site-layout-background\"\n                    style={{\n                        padding: 24,\n                        margin: 0,\n                        minHeight: 280,\n                    }}\n                >\n                    <h2>結算頁面</h2>\n                    <Table columns={columns} dataSource={settlementData} rowKey=\"member\" pagination={false}/>\n                    <Button type=\"primary\" \n                        icon={<LeftCircleOutlined />} \n                        onClick={() => navigate('/')} \n                        style={{ marginTop: 16 }}\n                    >\n                        返回首頁\n                    </Button>\n                </Content>\n            </Layout>\n        </Layout>\n    );\n};\n\nexport default SettlementPage;","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport MainPage from './MainPage';\nimport SettlementPage from './SettlementPage';\n\nconst participantsList = ['A', 'B', 'C', 'D', 'E'];\n\nconst App = () => {\n    const [expenses, setExpenses] = useState([]);\n\n    useEffect(() => {\n        const storedExpenses = JSON.parse(localStorage.getItem('expenses')) || [];\n        setExpenses(storedExpenses);\n    }, []);\n\n    useEffect(() => {\n        localStorage.setItem('expenses', JSON.stringify(expenses));\n    }, [expenses]);\n\n    const addExpense = (expense) => {\n        setExpenses(prevExpenses => [...prevExpenses, expense]);\n    };\n\n    return (\n        <Router basename={ process.env.PUBLIC_URL }>\n            <Routes>\n                <Route path=\"/\" element={<MainPage \n                    expenses={expenses} \n                    setExpenses={setExpenses} \n                    addExpense={addExpense} \n                    participantsList={participantsList} \n                />} />\n                <Route path=\"/settlement\" element={<SettlementPage \n                    expenses={expenses} \n                    participants={participantsList} \n                />} />\n            </Routes>\n        </Router>\n    );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport 'antd/dist/reset.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}